[project]
name = "catalog"
version = "0.1.0"
description = "Catalog API"
authors = [
    {name = "Roman Bulgakov",email = "bulgakovra.w@gmail.com"}
]
readme = "README.md"
requires-python = "~=3.13"
dependencies = [
    "fastapi[standard] (>=0.116.1,<0.117.0)",
    "sqlalchemy (>=2.0.43,<3.0.0)",
    "alembic (>=1.16.4,<2.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "dependency-injector (>=4.48.1,<5.0.0)",
    "pyjwt (>=2.10.1,<3.0.0)",
    "pycasbin (>=2.2.0,<3.0.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest-factoryboy = "^2.8.1"
ruff = "^0.12.10"
pytest-mock = "^3.15.0"
pytest-asyncio = "^1.1.0"
mypy = "^1.17.1"
pre-commit = "^4.3.0"
bandit = "^1.8.6"
pytest-cov = "^6.3.0"
pytest-xdist = "^3.8.0"
vulture = "^2.14"

[tool.pytest.ini_options]
addopts = "-ra -q -v --import-mode=importlib --cov-report html:coverage/htmlcov --cov-report lcov:coverage/lcov.info --cov-report xml:coverage/coverage.xml --cov-report term-missing:skip-covered"
pythonpath = "."
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning"]
asyncio_mode = "auto"

# https://coverage.readthedocs.io/en/latest/config.html
[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing", "thread"]

[tool.coverage.report]
include = ["catalog/*"]
# Regexes for lines to exclude from consideration
exclude_also = [
	# Don't complain about missing debug-only code:
	"def __repr__",
	"if self\\.debug",

	# Don't complain if tests don't hit defensive assertion code:
	"raise AssertionError",
	"raise NotImplementedError",

	# Don't complain if non-runnable code isn't run:
	"if 0:",
	"if __name__ == .__main__.:",

	# Don't complain about abstract methods, they aren't run:
	"@(abc\\.)?abstractmethod",
]
ignore_errors = true

[tool.vulture]
exclude = ["*file*.py", "dir/"]
ignore_decorators = []
ignore_names = []
make_whitelist = true
min_confidence = 80
paths = ["catalog"]
sort_by_size = true
verbose = false

[tool.ruff]
target-version = "py313"
line-length = 79
# Exclude a variety of commonly ignored directories.
exclude = [
	".bzr",
	".direnv",
	".eggs",
	".git",
	".git-rewrite",
	".hg",
	".ipynb_checkpoints",
	".mypy_cache",
	".nox",
	".pants.d",
	".pyenv",
	".pytest_cache",
	".pytype",
	".ruff_cache",
	".svn",
	".tox",
	".venv",
	".vscode",
	"__pypackages__",
	"_build",
	"buck-out",
	"build",
	"dist",
	"node_modules",
	"site-packages",
	"venv",
	"migrations",
	"tests/local_sandbox.py",
	"docs",
]

[tool.ruff.lint]
select = [
	"PL",
	"FAST",
	"PERF",
	"TRY",
	#    "TD",
	"PTH",
	"ARG",
	"TID252",
	"PT",
	"Q",
	"FA",
	"ANN",
	"N",
	# pycodestyle
	"E",
	# Pyflakes
	"F",
	# pyupgrade
	"UP",
	# flake8-bugbear
	"B",
	# flake8-simplify
	"SIM",
	# isort
	"I",
	"F841",
]
fixable = ["ALL"]
unfixable = [
	"F401", # unused-imports
]
ignore = [
	"UP035",   # Deprecated types (remove in near future)
	"ANN002",  # missing-type-args - ?
	"ANN003",  # missing-type-kwargs - ?
	"FAST002", # FastAPI dependency without `Annotated` - DI error
	"TRY003",  # Avoid specifying long messages outside the exception class
	"ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
]

[tool.ruff.lint.per-file-ignores]
"models/*" = ["F821"]
"src/**/models/*" = ["F821"]
"tests/*" = ["ARG001", "ANN201"]
"core/*" = ["UP047", "PLC0415"]

[tool.ruff.lint.flake8-bugbear]
# Allow default arguments like, e.g., `data: List[str] = fastapi.Query(None)`.
extend-immutable-calls = [
	"fastapi.Depends",
	"fastapi.Body",
	"fastapi.Query",
	"fastapi.File",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = 20

[tool.mypy]
python_version = "3.13"
plugins = ["pydantic.mypy"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
no_implicit_reexport = true
disallow_untyped_defs = true
explicit_package_bases = true
ignore_missing_imports = true
show_error_codes = true
no_implicit_optional = true
warn_return_any = false
check_untyped_defs = true
strict_equality = true
packages = ["catalog"]

[pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.bandit]
exclude_dirs = [
	"tests",
	"migrations",
	"venv",
	'.venv',
	'settings',
	'deploy',
	'config',
	'logs',
	'.github',
	'.vscode',
	'.idea',
	'.editorConfig',
]
tests = ["B201", "B301"]
skips = ["B101", "B601"]
